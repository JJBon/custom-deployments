apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "langgraph-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "langgraph-server.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "langgraph-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "langgraph-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
          env:
            - name: LANGGRAPH_AUTH_TYPE
              value: {{ .Values.env.LANGGRAPH_AUTH_TYPE | quote }}
            # LangSmith API key
            - name: LANGSMITH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.langsmith }}
                  key: LANGSMITH_API_KEY
            # If you later get a production license, add it to this secret and uncomment:
            # - name: LANGGRAPH_LICENSE_KEY
            #   valueFrom:
            #     secretKeyRef:
            #       name: {{ .Values.secretRefs.langsmith }}
            #       key: LANGGRAPH_LICENSE_KEY
            # DB + Redis URLs
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.postgres }}
                  key: DATABASE_URL
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretRefs.redis }}
                  key: REDIS_URL
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 20
            periodSeconds: 20
          resources:
{{- toYaml .Values.resources | nindent 12 }}
